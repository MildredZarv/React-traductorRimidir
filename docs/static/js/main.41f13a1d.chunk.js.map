{"version":3,"sources":["components/Header.js","components/Traductor.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Traductor","useState","text","setTetx","className","onChange","newText","target","value","replace","placeholder","id","onClick","document","getElementById","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"4KAEaA,EAAS,WAClB,OACI,gCACI,mDACA,uE,OCkBGC,EAtBG,WACd,MAA0BC,qBAA1B,mBAAQC,EAAR,KAAcC,EAAd,KAYA,OACI,gCACI,uBAAOC,UAAY,YAAYC,SAZhB,SAAC,GAAc,IAC5BC,EAD2B,EAAZC,OACEC,MAAMC,QAAQ,MAAM,KAAKA,QAAQ,MAAM,KAAKA,QAAQ,MAAM,KAAKA,QAAQ,MAAM,KACpGN,EAASG,IAUwDI,YAAc,oBAAoBC,GAAK,cACpG,4BAAKT,IACL,wBAAQE,UAAY,WAAWQ,QATnB,WAChBC,SAASC,eAAe,aAAaN,MAAQ,GAC7CL,KAOI,uBCHGY,MAZf,WACE,OACE,mCACA,sBAAKX,UAAY,YAAjB,UACI,cAAC,EAAD,IACA,cAAC,EAAD,UCGOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFd,SAASC,eAAe,SAM1BE,K","file":"static/js/main.41f13a1d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <h1>Traductor rimidir</h1>\r\n            <p>Type something and see the result!</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nconst Traductor = () => {\r\n    const [ text, setTetx ] = useState();\r\n\r\n    const handleTraducer = ({target}) => {\r\n        const newText = target.value.replace(/a/gi,'i').replace(/e/gi,'i').replace(/o/gi,'i').replace(/u/gi,'i'); \r\n        setTetx( newText );\r\n    }\r\n\r\n    const handleClear = () => {\r\n        document.getElementById(\"textInput\").value = \"\";\r\n        setTetx();\r\n    }\r\n\r\n    return (\r\n        <div>        \r\n            <input className = 'textInput' onChange = { handleTraducer } placeholder = 'type something...' id = 'textInput' />\r\n            <p>{ text }</p>\r\n            <button className = 'controls' onClick = { handleClear }>Clear</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Traductor\r\n","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport Traductor from \"./components/Traductor\";\n\nfunction App() {\n  return (\n    <>\n    <div className = 'container'>\n        <Header />\n        <Traductor />\n    </div>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}